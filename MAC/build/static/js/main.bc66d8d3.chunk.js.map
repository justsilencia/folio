{"version":3,"sources":["components/nav/NavBar.jsx","components/alpha-import/AlphaImport.jsx","components/alpha-run/JobChange.jsx","components/alpha-run/RowResult.jsx","components/alpha-run/AlphaRun.jsx","components/job-codes/JobCodes.jsx","components/class-lists/ClassLists.jsx","components/class-lists/GroupList.jsx","components/class-students/ClassStudents.jsx","components/class-students/GroupStudents.jsx","components/class-students/AllGroups.jsx","components/class-students/Unassigned.jsx","index.jsx"],"names":["CustomNav","Component","constructor","props","super","this","state","classes","groups","populateClasses","bind","populateGroups","fetch","method","headers","then","res","json","results","setState","componentDidMount","render","renderClassLinks","filter","item","classname","map","i","NavDropdown","Item","key","href","teacher","renderGroupLinks","groupname","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","title","Divider","AlphaImport","handleAlphaUpload","click307File","inputRefAlpha","React","createRef","current","click","e","target","files","dataForm","FormData","length","append","axios","post","console","log","data","alert","catch","err","multiple","onChange","ref","type","onClick","JobChange","jobCodes","newJobAM","newJobPM","reason","setAMJob","setPMJob","setReason","value","amJobs","shift","pmJobs","renderAMOptions","jobcode","renderPMOptions","info","dc","lastname","firstname","col","jobam","jobpm","RowResult","assignedAMClass","assignedPMClass","toggleJobChange","toggleBtnClass","setAssignedAMClass","setAssignedPMClass","updateAMClass","updatePMClass","jobChangeToggle","row","classam","classpm","assClass","newClass","body","JSON","stringify","rowKey","rowNum","housing","classOptions","jobChange","AlphaRun","searchVal","searchResults","searchAplha","setSearchVal","keyCode","search","toUpperCase","renderClasses","renderRows","onKeyUp","placeholder","JobCodes","newCode","newDesc","assocClass","postJobCode","setCodeVal","setDescVal","setClassVal","setShiftVal","populateJobCodes","deleteJobCode","jobdesc","assocclass","code","amRows","pmRows","renderAMRows","class","renderPMRows","renderOptions","ClassList","group","postClass","deleteClass","setClassName","setTeacherName","setGroup","delClass","GroupList","newGroup","postGroup","deleteGroup","delGroup","renderGroups","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","ClassStudents","students","AM","PM","excelData","excelTabeData","formatExcelData","match","params","formattedData","formattedTabeData","push","num","lr","lm1","lm2","ll","r1","r2","m1","m2","la","forEach","renderAMStudents","renderPMStudents","element","name","label","GroupStudents","classStudents","sort","a","b","renderedClassLists","obj","AllGroups","groupStudents","dateObj","Date","formattedDate","getMonth","getDate","getFullYear","currGroup","currClass","ii","columns","width","wpx","groupName","style","border","top","bottom","right","left","font","bold","studentsAM","stu","iii","studentsPM","renderExcel","dataSet","Unassigned","unassigned","renderStu","rootEl","document","getElementById","exact","path","component","ClassLists"],"mappings":"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","file":"static/js/main.bc66d8d3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\n\r\nclass CustomNav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            classes: [],\r\n            groups: []\r\n        }\r\n\r\n        this.populateClasses = this.populateClasses.bind(this);\r\n        this.populateGroups = this.populateGroups.bind(this);\r\n    }\r\n\r\n    populateClasses() {\r\n        fetch('http://localhost:4001/getclasses', {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                }\r\n        }).then(res => {\r\n            return res.json();\r\n        }).then(results => {\r\n            this.setState({classes: results});\r\n        });\r\n    }\r\n\r\n    populateGroups() {\r\n        fetch('http://localhost:4001/getgroups', {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                }\r\n        }).then(res => {\r\n            return res.json();\r\n        }).then(results => {\r\n            this.setState({groups: results});\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateGroups();\r\n        this.populateClasses();\r\n    }\r\n\r\n    render() {\r\n\r\n        const classes = this.state.classes.filter((item) => item.classname !== 'UUU');\r\n\r\n        const renderClassLinks = classes.map((item, i) => {\r\n            return (\r\n                <NavDropdown.Item key={i} href={\"/classstudents/\" + item.classname + '/' + item.teacher}>{item.classname}</NavDropdown.Item>\r\n            )\r\n        });\r\n\r\n        const groups = this.state.groups.filter((item) => item.groupname !== 'UUU');\r\n\r\n        const renderGroupLinks = groups.map((item, i) => {\r\n            return (\r\n                <NavDropdown.Item key={i} href={\"/groupstudents/\" + item.groupname}>{item.groupname}</NavDropdown.Item>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                <Navbar.Brand href=\"/\">MAC</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                    <Nav.Link className='mr-3' href=\"/\">Alpha Run</Nav.Link>\r\n                    <Nav.Link className='mr-3' href=\"/alphaimport\">Alpha Import</Nav.Link>\r\n                    <Nav.Link className='mr-3' href=\"/jobcodes\">Job Codes</Nav.Link>\r\n                    <NavDropdown title=\"Class Lists\" id=\"basic-nav-dropdown\">\r\n                        <NavDropdown.Item href=\"/classlists\"><em>Modify Classes</em></NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"/grouplist\"><em>Modify Groups</em></NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item href=\"/allgroups\">ALL GROUPS</NavDropdown.Item>\r\n                        {renderGroupLinks? renderGroupLinks : <NavDropdown.Item href=\"/\"></NavDropdown.Item>}\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Divider />\r\n                        {renderClassLinks? renderClassLinks : <NavDropdown.Item href=\"/\"></NavDropdown.Item>}\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item href=\"/unassigned\">Unassigned</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n} \r\n\r\nexport default CustomNav;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass AlphaImport extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleAlphaUpload = this.handleAlphaUpload.bind(this);\r\n        this.click307File = this.click307File.bind(this);\r\n\r\n        this.inputRefAlpha = React.createRef();\r\n    }\r\n\r\n    click307File() {\r\n        this.inputRefAlpha.current.click();\r\n    }\r\n\r\n    handleAlphaUpload(e) {\r\n        if (e.target.files) {\r\n\r\n            const dataForm = new FormData();\r\n            for (let i=0; i<e.target.files.length; i++) {\r\n                dataForm.append('file', e.target.files[i]);\r\n            }\r\n            \r\n            axios.post('http://localhost:4001/importalpha', dataForm)\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        if (res.data === 'ok') {\r\n                            alert('Alpha update complete.');\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                        alert('There was an error importing the alpha run.');\r\n                    });\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='mt-4'>\r\n                <div>\r\n                    <h2>Import Alpha Run(s)</h2>\r\n                    <input multiple onChange={this.handleAlphaUpload} ref={this.inputRefAlpha} className='hidden' type='file' />\r\n                    <button onClick={this.click307File} className='btn btn-info'>Get Alpha-Run PDF(s)</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AlphaImport;","import React, { Component } from 'react';\r\nimport '../../styles/jobchangemodal.css';\r\n\r\nclass JobChange extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            jobCodes: [],\r\n            newJobAM: '',\r\n            newJobPM: '',\r\n            reason: ''\r\n        }\r\n\r\n        this.setAMJob = this.setAMJob.bind(this);\r\n        this.setPMJob = this.setPMJob.bind(this);\r\n        this.setReason = this.setReason.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:4001/getjobs', {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                }\r\n        }).then(res => {\r\n            return res.json();\r\n        }).then(results => {\r\n            this.setState({jobCodes: results});\r\n        });\r\n    }\r\n\r\n    setAMJob(e) {\r\n        this.setState({newJobAM: e.target.value});\r\n    }\r\n\r\n    setPMJob(e) {\r\n        this.setState({newJobPM: e.target.value});\r\n    }\r\n\r\n    setReason(e) {\r\n        this.setState({reason: e.target.value});\r\n    }\r\n\r\n    render() {\r\n\r\n        const amJobs = this.state.jobCodes.filter((item) => {\r\n            return (item.shift === 'AM' || item.shift === 'ALL');\r\n        });\r\n        const pmJobs = this.state.jobCodes.filter((item) => {\r\n            return (item.shift === 'PM' || item.shift === 'ALL');\r\n        });\r\n\r\n        const renderAMOptions = amJobs.map((item, i) => {\r\n            return (\r\n                <option key={i} value={item.jobcode}>{item.jobcode}</option>\r\n            )\r\n        });\r\n\r\n        const renderPMOptions = pmJobs.map((item, i) => {\r\n            return (\r\n                <option key={i} value={item.jobcode}>{item.jobcode}</option>\r\n            )\r\n        });\r\n    \r\n        return (\r\n            <div className='mt-4 job-change-modal'>\r\n                <center>\r\n                    <h2>{this.props.info.dc}</h2>\r\n                    <h3>{this.props.info.lastname + ', ' + this.props.info.firstname}</h3>\r\n                    <br />\r\n                    <h3>AM Job</h3>\r\n                    <select onChange={this.setAMJob} className='select-default' value={this.state.newJobAM}>\r\n                        <option value=''></option>\r\n                        {renderAMOptions}\r\n                    </select>\r\n                    <br /><br />\r\n                    <h3>PM Job</h3>\r\n                    <select onChange={this.setPMJob} className='select-default' value={this.state.newJobPM}>\r\n                        <option value=''></option>\r\n                        {renderPMOptions}\r\n                    </select>\r\n                    <br /><br />\r\n                    <h3>Reason</h3>\r\n                    <textarea value={this.state.reason} onChange={this.setReason} col='5' />\r\n                    <br /><br />\r\n                    <a className='btn btn-dark' target='_blank' href={'http://localhost:4001/createjobchange/' + \r\n                    (this.state.newJobAM? this.state.newJobAM : 'na') + \r\n                    '/' + \r\n                    (this.state.newJobPM? this.state.newJobPM : 'na') +\r\n                    '/' + \r\n                    this.props.info.firstname +\r\n                    '/' + \r\n                    this.props.info.lastname +\r\n                    '/' + \r\n                    this.props.info.dc +\r\n                    '/' + \r\n                    this.props.info.jobam +\r\n                    '/' + \r\n                    this.props.info.jobpm +\r\n                    '/' + \r\n                    (this.state.reason? this.state.reason : 'na') }>Create</a>\r\n                </center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JobChange;\r\n","import React, { Component } from 'react';\r\nimport JobChange from './JobChange.jsx';\r\n\r\nclass RowResult extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            assignedAMClass: '',\r\n            assignedPMClass: '',\r\n            toggleJobChange: false,\r\n            toggleBtnClass: 'btn-info'\r\n        }\r\n\r\n        this.setAssignedAMClass = this.setAssignedAMClass.bind(this);\r\n        this.setAssignedPMClass = this.setAssignedPMClass.bind(this);\r\n        this.updateAMClass = this.updateAMClass.bind(this);\r\n        this.updatePMClass = this.updatePMClass.bind(this);\r\n        this.jobChangeToggle = this.jobChangeToggle.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.row.classam) {\r\n            this.setAssignedAMClass(this.props.row.classam);\r\n        } \r\n        if (this.props.row.classpm) {\r\n            this.setAssignedPMClass(this.props.row.classpm);\r\n        }\r\n    }\r\n\r\n    setAssignedAMClass(assClass) {\r\n        this.setState({assignedAMClass: assClass});\r\n    }\r\n\r\n    setAssignedPMClass(assClass) {\r\n        this.setState({assignedPMClass: assClass});\r\n    }\r\n\r\n    updateAMClass(e) {\r\n        const dc = this.props.row.dc;\r\n        const newClass = e.target.value;\r\n        \r\n        fetch('http://localhost:4001/updatestuclass', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    updateAMClass: newClass,\r\n                    dc: dc\r\n                })\r\n              }).then(res => {\r\n                  return res.json();\r\n              }).then(json => {\r\n                  this.setAssignedAMClass(newClass);\r\n              });\r\n    }\r\n\r\n    updatePMClass(e) {\r\n        const dc = this.props.row.dc;\r\n        const newClass = e.target.value;\r\n        \r\n        fetch('http://localhost:4001/updatestuclass', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    updatePMClass: newClass,\r\n                    dc: dc\r\n                })\r\n              }).then(res => {\r\n                  return res.json();\r\n              }).then(json => {\r\n                  this.setAssignedPMClass(newClass);\r\n              });\r\n    }\r\n\r\n    jobChangeToggle() {\r\n        this.setState({toggleJobChange: !this.state.toggleJobChange});\r\n        if (this.state.toggleBtnClass === 'btn-info') {\r\n            this.setState({toggleBtnClass: 'btn-warning'});\r\n        } else {\r\n            this.setState({toggleBtnClass: 'btn-info'});\r\n        }\r\n    }\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <tr key={this.props.rowKey}>\r\n                    <td>{this.props.rowNum}</td>\r\n                    <td>{this.props.row.dc}</td>\r\n                    <td>{this.props.row.lastname}, {this.props.row.firstname}</td>\r\n                    <td>{this.props.row.housing}</td>\r\n                    <td>{this.props.row.jobam}</td>\r\n                    <td>{this.props.row.jobpm}</td>\r\n                    <td>\r\n                        {\r\n                            this.state.assignedAMClass? \r\n                                <select onChange={this.updateAMClass} value={this.state.assignedAMClass}>\r\n                                    <option key='00' value={this.state.assignedPMClass}>{this.state.assignedAMClass}</option>\r\n                                    {this.props.classOptions}\r\n                                </select>\r\n                                :\r\n                                <select onChange={this.updateAMClass} value=''>\r\n                                    <option key='00' value=''></option>\r\n                                    {this.props.classOptions}\r\n                                </select>\r\n                        }\r\n                    </td>\r\n                    <td>\r\n                        {\r\n                            this.state.assignedPMClass? \r\n                                <select onChange={this.updatePMClass} value={this.state.assignedPMClass}>\r\n                                    <option key='00' value={this.state.assignedPMClass}>{this.state.assignedPMClass}</option>\r\n                                    {this.props.classOptions}\r\n                                </select>\r\n                                :\r\n                                <select onChange={this.updatePMClass} value=''>\r\n                                    <option key='00' value=''></option>\r\n                                    {this.props.classOptions}\r\n                                </select>\r\n                        }\r\n                    </td>\r\n                    {\r\n                        this.props.jobChange?\r\n                        <td className='relcell'>\r\n                            <button onClick={this.jobChangeToggle} className={'btn ' + this.state.toggleBtnClass}>Job Change</button>\r\n                            {\r\n                                this.state.toggleJobChange? <JobChange info={this.props.row} /> : ''\r\n                            }\r\n                        </td>\r\n                        :<></>\r\n                    }\r\n                </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RowResult;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/alpharun.css';\r\nimport RowResult from './RowResult.jsx';\r\n\r\nclass AlphaRun extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            searchVal: '',\r\n            searchResults: [],\r\n            classes: []\r\n        }\r\n\r\n        this.searchAplha = this.searchAplha.bind(this);\r\n        this.setSearchVal = this.setSearchVal.bind(this);\r\n        this.populateClasses = this.populateClasses.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateClasses();\r\n    }\r\n\r\n    setSearchVal(e) {\r\n        this.setState({searchVal: e.target.value});\r\n    }\r\n\r\n    searchAplha(e) {\r\n        if (e.keyCode === 13) {\r\n            \r\n            let search = this.state.searchVal;\r\n            \r\n            if (search !== '') {\r\n                search = search.toUpperCase();\r\n                fetch('http://localhost:4001/getalpha/' + search, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                }).then(res => {\r\n                    return res.json();\r\n                }).then(data => {\r\n                    this.setState({searchResults: data, searchVal: ''});\r\n                });\r\n            } else {\r\n                alert('Enter something in the search field.');\r\n            }\r\n        }\r\n    }\r\n\r\n    populateClasses() {\r\n        fetch('http://localhost:4001/getclasses', {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                }\r\n        }).then(res => {\r\n            return res.json();\r\n        }).then(results => {\r\n            this.setState({classes: results});\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const renderClasses = this.state.classes.map((item, i) => {\r\n            return (\r\n                <option key={i} value={item.classname}>{item.classname}</option>\r\n            )\r\n        });\r\n\r\n        const renderRows = this.state.searchResults.map((item, i) => {\r\n            if (!item.classam) {\r\n                item.classam = 'UUU';\r\n            }\r\n            if (!item.classpm) {\r\n                item.classpm = 'UUU';\r\n            }\r\n            return (\r\n                <RowResult rowNum={i+1} jobChange={true} key={item.dc} classOptions={renderClasses} row={item} rowKey={i} />\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className='mt-4'>\r\n                <div>\r\n                    <input onChange={this.setSearchVal} value={this.state.searchVal} \r\n                    onKeyUp={this.searchAplha} className='input-default' type='text' \r\n                    id='alphasearch' placeholder='DC#, Last Name, or Job Code...' />\r\n                </div>\r\n                <div className='mt-4 alpha-table-container'>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>DC#</th>\r\n                                <th>Name</th>\r\n                                <th>Housing</th>\r\n                                <th>AM Job</th>\r\n                                <th>PM Job</th>\r\n                                <th>AM Class</th>\r\n                                <th>PM Class</th>\r\n                                <th>Job Change</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.searchResults.length>0?renderRows:<tr><td>No results.</td></tr>}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AlphaRun;\r\n\r\n","import React, { Component } from 'react';\r\nimport '../../styles/jobcodes.css';\r\n\r\nclass JobCodes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            jobCodes: [],\r\n            classes: [],\r\n            newCode: '',\r\n            newDesc: '',\r\n            assocClass: '',\r\n            shift: 'AM'\r\n        }\r\n\r\n        this.postJobCode = this.postJobCode.bind(this);\r\n        this.setCodeVal = this.setCodeVal.bind(this);\r\n        this.setDescVal = this.setDescVal.bind(this);\r\n        this.setClassVal = this.setClassVal.bind(this);\r\n        this.setShiftVal = this.setShiftVal.bind(this);\r\n        this.populateJobCodes = this.populateJobCodes.bind(this);\r\n        this.populateClasses = this.populateClasses.bind(this);\r\n        this.deleteJobCode = this.deleteJobCode.bind(this);\r\n    }\r\n\r\n    populateJobCodes() {\r\n        fetch('http://localhost:4001/getjobs', {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                }\r\n        }).then(res => {\r\n            return res.json();\r\n        }).then(results => {\r\n            this.setState({jobCodes: results});\r\n        });\r\n    }\r\n\r\n    populateClasses() {\r\n        fetch('http://localhost:4001/getclasses', {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                }\r\n        }).then(res => {\r\n            return res.json();\r\n        }).then(results => {\r\n            this.setState({classes: results});\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateJobCodes();\r\n        this.populateClasses();\r\n    }\r\n\r\n    setCodeVal(e) {\r\n        this.setState({newCode: e.target.value});\r\n    }\r\n\r\n    setDescVal(e) {\r\n        this.setState({newDesc: e.target.value});\r\n    }\r\n\r\n    setClassVal(e) {\r\n        this.setState({assocClass: e.target.value});\r\n    }\r\n\r\n    setShiftVal(e) {\r\n        this.setState({shift: e.target.value});\r\n    }\r\n\r\n    postJobCode() {\r\n        if (this.state.newCode !== '' && this.state.newDesc !== '') {\r\n            fetch('http://localhost:4001/postjobcode', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                  jobcode: this.state.newCode,\r\n                  jobdesc: this.state.newDesc,\r\n                  assocclass: this.state.assocClass,\r\n                  shift: this.state.shift  \r\n                })\r\n              }).then(res => {\r\n                  return res.json();\r\n              }).then(json => {\r\n                  this.setState({newCode: '', newDesc: '', assocClass: ''});\r\n                  this.populateJobCodes();\r\n              });\r\n        } else {\r\n            alert('Insert a value into job code and job description.');\r\n        }\r\n    }\r\n\r\n    deleteJobCode(code) {\r\n        fetch('http://localhost:4001/deletejobcode/' + code, {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                }\r\n              }).then(res => {\r\n                  return res.json();\r\n              }).then(json => {\r\n                  this.populateJobCodes();\r\n              });\r\n    }\r\n\r\n    render() {\r\n        const amRows = this.state.jobCodes.filter((item) => {\r\n            return (item.shift === 'AM' || item.shift === 'ALL');\r\n        });\r\n        const pmRows = this.state.jobCodes.filter((item) => {\r\n            return (item.shift === 'PM' || item.shift === 'ALL');\r\n        });\r\n\r\n        const renderAMRows = amRows.map((item, i) => {\r\n            return (\r\n                <tr key={i}>\r\n                    <td>{item.jobcode}</td>\r\n                    <td>{item.jobdesc}</td>\r\n                    <td>{item.class}</td>\r\n                    <td><button className='btn btn-danger' onClick={() => this.deleteJobCode(item.jobcode)}>Delete</button></td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n        const renderPMRows = pmRows.map((item, i) => {\r\n            return (\r\n                <tr key={i}>\r\n                    <td>{item.jobcode}</td>\r\n                    <td>{item.jobdesc}</td>\r\n                    <td>{item.class}</td>\r\n                    <td><button className='btn btn-danger' onClick={() => this.deleteJobCode(item.jobcode)}>Delete</button></td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n        const renderOptions = this.state.classes.map((item, i) => {\r\n            return (\r\n            <option value={item.classname} key={i}>{item.classname}</option>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className='mt-4 new-job-container'>\r\n                        <h2>Add New Job</h2>\r\n                        <table>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>Shift:</td>\r\n                                <td>\r\n                                    <select className='select-default' onChange={this.setShiftVal} value={this.state.shift}>\r\n                                        <option value='AM'>AM</option>\r\n                                        <option value='PM'>PM</option>\r\n                                        <option value='ALL'>All Day</option>\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Class:</td>\r\n                                <td>\r\n                                    <select className='select-default' value={this.state.assocClass} onChange={this.setClassVal}>\r\n                                        <option value=''></option>\r\n                                        {renderOptions? renderOptions : <option value=''></option>}\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Job Code:</td>\r\n                                <td><input value={this.state.newCode} className='input-default' onChange={this.setCodeVal} type='text' /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Job Desc:</td>\r\n                                <td><input value={this.state.newDesc} className='input-default' onChange={this.setDescVal} type='text' /></td>\r\n                                <td><button onClick={this.postJobCode} className='btn btn-info ml-2'>Add Job Code</button></td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                <div className='row mt-4 jobs-table-container'>\r\n                    <div className='col-6 mt-4'>\r\n                        <table className='bordered-tbl'>\r\n                            <caption>AM Job Codes</caption>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Job Code</th>\r\n                                    <th>Descriptive Name</th>\r\n                                    <th>Assoc. Class</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.jobCodes? renderAMRows : <tr><td>Loading...</td></tr>}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <div className='col-6 mt-4'>\r\n                        <table className='bordered-tbl'>\r\n                            <caption>PM Job Codes</caption>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Job Code</th>\r\n                                    <th>Descriptive Name</th>\r\n                                    <th>Assoc. Class</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.jobCodes? renderPMRows : <tr><td>Loading...</td></tr>}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JobCodes;\r\n\r\n","import React, { Component } from 'react';\r\nimport '../../styles/classlists.css';\r\n\r\nclass ClassList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            classes: [],\r\n            groups: [],\r\n            group: '',\r\n            className: '',\r\n            teacher: ''\r\n        }\r\n\r\n        this.populateClasses = this.populateClasses.bind(this);\r\n        this.populateGroups = this.populateGroups.bind(this);\r\n        this.postClass = this.postClass.bind(this);\r\n        this.deleteClass = this.deleteClass.bind(this);\r\n        this.setClassName = this.setClassName.bind(this);\r\n        this.setTeacherName = this.setTeacherName.bind(this);\r\n        this.setGroup = this.setGroup.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateClasses();\r\n        this.populateGroups();\r\n    }\r\n\r\n    setGroup(e) {\r\n        this.setState({group: e.target.value});\r\n    }\r\n\r\n    setClassName(e) {\r\n        this.setState({className: e.target.value});\r\n    }\r\n\r\n    setTeacherName(e) {\r\n        this.setState({teacher: e.target.value});\r\n    }\r\n\r\n    populateClasses() {\r\n        fetch('http://localhost:4001/getclasses', {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                }\r\n        }).then(res => {\r\n            return res.json();\r\n        }).then(results => {\r\n            this.setState({classes: results});\r\n        });\r\n    }\r\n\r\n    populateGroups() {\r\n        fetch('http://localhost:4001/getgroups', {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                }\r\n        }).then(res => {\r\n            return res.json();\r\n        }).then(results => {\r\n            this.setState({groups: results});\r\n        });\r\n    }\r\n\r\n    postClass() {\r\n        if (this.state.group !== '' && this.state.className !== '' && this.state.teacher !== '') {\r\n            fetch('http://localhost:4001/postclass', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    classname: this.state.className,\r\n                    group: this.state.group,\r\n                    teacher: this.state.teacher\r\n                })\r\n            }).then(res => {\r\n                return res.json();\r\n            }).then(results => {\r\n                this.setState({className: '', teacher: ''});\r\n                this.populateClasses();\r\n            });\r\n        } else {\r\n            alert('Enter a group, class, and teacher.');\r\n        }\r\n    }\r\n\r\n    deleteClass(delClass) {\r\n        fetch('http://localhost:4001/deleteclass/' + delClass, {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                }\r\n              }).then(res => {\r\n                  return res.json();\r\n              }).then(json => {\r\n                  this.populateClasses();\r\n              });\r\n    }\r\n\r\n    render() {\r\n\r\n        const renderClasses = this.state.classes.map((item, i) => {\r\n            return (\r\n                <tr key={i}>\r\n                    <td>{item.classname}</td>\r\n                    <td>{item.group}</td>\r\n                    <td>{item.teacher}</td>\r\n                    <td><button onClick={() => this.deleteClass(item.classname)} className='btn btn-danger'>Delete</button></td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n        const renderOptions = this.state.groups.map((item, i) => {\r\n            return (\r\n                <option key={item.groupname} value={item.groupname}>{item.groupname}</option>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <div className='mt-4 new-class-container'>\r\n                    <h2>Add New Class</h2>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Group:</td>\r\n                                <td>\r\n                                    <select onChange={this.setGroup} value={this.state.group} className='select-default'>\r\n                                        <option key='00' value=''></option>\r\n                                        {renderOptions? renderOptions : <option value=''></option>}\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Class name:</td>\r\n                                <td><input type='text' value={this.state.className} onChange={this.setClassName} className='input-default' /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Teacher:</td>\r\n                                <td><input type='text' value={this.state.teacher} onChange={this.setTeacherName} className='input-default' /></td>\r\n                                <td><button onClick={this.postClass} className='btn btn-info ml-2'>Add Class</button></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className='mt-4 classes-table-container'>\r\n                    <table className='bordered-tbl'>\r\n                        <caption>Classes</caption>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Class Name</th>\r\n                                <th>Group</th>\r\n                                <th>Teacher</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.classes? renderClasses : <tr><td>Loading...</td></tr>}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClassList;","import React, { Component } from 'react';\r\nimport '../../styles/classlists.css';\r\n\r\nclass GroupList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            groups: [],\r\n            newGroup: ''\r\n        }\r\n\r\n        this.populateGroups = this.populateGroups.bind(this);\r\n        this.postGroup = this.postGroup.bind(this);\r\n        this.deleteGroup = this.deleteGroup.bind(this);\r\n        this.setGroup = this.setGroup.bind(this);\r\n    }\r\n\r\n    setGroup(e) {\r\n        this.setState({newGroup: e.target.value});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateGroups();\r\n    }\r\n\r\n    populateGroups() {\r\n        fetch('http://localhost:4001/getgroups', {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                }\r\n        }).then(res => {\r\n            return res.json();\r\n        }).then(results => {\r\n            this.setState({groups: results});\r\n        });\r\n    }\r\n\r\n    postGroup() {\r\n        if (this.state.className !== '' && this.state.teacher !== '') {\r\n            fetch('http://localhost:4001/postgroup', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    groupname: this.state.newGroup\r\n                })\r\n            }).then(res => {\r\n                return res.json();\r\n            }).then(results => {\r\n                this.setState({newGroup: ''});\r\n                this.populateGroups();\r\n            });\r\n        } else {\r\n            alert('Enter a class and teacher.');\r\n        }\r\n    }\r\n\r\n    deleteGroup(delGroup) {\r\n        fetch('http://localhost:4001/deletegroup/' + delGroup, {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                }\r\n              }).then(res => {\r\n                  return res.json();\r\n              }).then(json => {\r\n                  this.populateGroups();\r\n              });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const renderGroups = this.state.groups.map((item, i) => {\r\n            return (\r\n                <tr key={item.groupname}>\r\n                    <td>{item.groupname}</td>\r\n                    <td><button onClick={() => this.deleteGroup(item.groupname)} className='btn btn-danger'>Delete</button></td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className='mt-4'>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>New group:</td>\r\n                                <td><input type='text' value={this.state.newGroup} onChange={this.setGroup} className='input-default' /></td>\r\n                                <td><button onClick={this.postGroup} className='btn btn-info ml-2'>Add Group</button></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className='mt-4'>\r\n                    <table className='bordered-tbl'>\r\n                        <caption>Groups</caption>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Group Name</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.groups? renderGroups : <tr><td>Loading...</td></tr>}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GroupList;","import React, { Component } from 'react';\r\nimport ReactExport from \"react-data-export\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nclass ClassStudents extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            students: {\r\n                AM: [],\r\n                PM: []\r\n            },\r\n            excelData: [],\r\n            excelTabeData: []\r\n        }\r\n\r\n        this.formatExcelData = this.formatExcelData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:4001/getclassstudents/' + this.props.match.params.classname, {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                }\r\n        }).then(res => {\r\n            return res.json();\r\n        }).then(results => {\r\n            this.setState({students: results});\r\n            this.formatExcelData(results);\r\n        });\r\n    }\r\n\r\n    formatExcelData() {\r\n\r\n        const formattedData = [];\r\n        const formattedTabeData = [];\r\n\r\n        // Tabe\r\n        formattedTabeData.push({\r\n            num: this.props.match.params.teacher\r\n        });\r\n        formattedTabeData.push({\r\n            num: this.props.match.params.classname + ' - AM',\r\n            dc: '',\r\n            lastname: '',\r\n            firstname: ''\r\n        });\r\n\r\n        formattedTabeData.push({\r\n            num: '#',\r\n            dc: 'DC',\r\n            lastname: 'Last Name',\r\n            firstname: 'First Name',\r\n            housing: 'Housing',\r\n            lr: 'LR',\r\n            lm1: 'LM1',\r\n            lm2: 'LM2',\r\n            ll: 'LL',\r\n            r1: 'R1',\r\n            r2: 'R2',\r\n            m1: 'M1',\r\n            m2: 'M2',\r\n            la: 'LA'\r\n        });\r\n\r\n        this.state.students.AM.forEach((item, i) => {\r\n            item.num = i+1;\r\n            formattedTabeData.push(item);\r\n        });\r\n\r\n        formattedTabeData.push({\r\n            dc: '',\r\n            lastname: '',\r\n            firstname: ''\r\n        });\r\n\r\n        formattedTabeData.push({\r\n            num: this.props.match.params.teacher\r\n        });\r\n\r\n        formattedTabeData.push({\r\n            num: this.props.match.params.classname + ' - PM',\r\n            dc: '',\r\n            lastname: '',\r\n            firstname: ''\r\n        });\r\n\r\n        formattedTabeData.push({\r\n            num: '#',\r\n            dc: 'DC',\r\n            lastname: 'Last Name',\r\n            firstname: 'First Name',\r\n            housing: 'Housing',\r\n            lr: 'LR',\r\n            lm1: 'LM1',\r\n            lm2: 'LM2',\r\n            ll: 'LL',\r\n            r1: 'R1',\r\n            r2: 'R2',\r\n            m1: 'M1',\r\n            m2: 'M2',\r\n            la: 'LA'\r\n        });\r\n\r\n        this.state.students.PM.forEach((item, i) => {\r\n            item.num = i+1;\r\n            formattedTabeData.push(item);\r\n        });\r\n\r\n        this.setState({excelTabeData: formattedTabeData});\r\n\r\n\r\n        // No Tabe\r\n        formattedData.push({\r\n            num: this.props.match.params.teacher\r\n        });\r\n\r\n        formattedData.push({\r\n            num: this.props.match.params.classname + ' - AM',\r\n            dc: '',\r\n            lastname: '',\r\n            firstname: ''\r\n        });\r\n\r\n        formattedData.push({\r\n            num: '#',\r\n            dc: 'DC',\r\n            lastname: 'Last Name',\r\n            firstname: 'First Name',\r\n            housing: 'Housing'\r\n        });\r\n\r\n        this.state.students.AM.forEach((item, i) => {\r\n            item.num = i+1;\r\n            formattedData.push(item);\r\n        });\r\n\r\n        formattedData.push({\r\n            dc: '',\r\n            lastname: '',\r\n            firstname: ''\r\n        });\r\n\r\n        formattedData.push({\r\n            num: this.props.match.params.teacher\r\n        });\r\n\r\n        formattedData.push({\r\n            num: this.props.match.params.classname + ' - PM',\r\n            dc: '',\r\n            lastname: '',\r\n            firstname: ''\r\n        });\r\n\r\n        formattedData.push({\r\n            num: '#',\r\n            dc: 'DC',\r\n            lastname: 'Last Name',\r\n            firstname: 'First Name',\r\n            housing: 'Housing'\r\n        });\r\n\r\n        this.state.students.PM.forEach((item, i) => {\r\n            item.num = i+1;\r\n            formattedData.push(item);\r\n        });\r\n\r\n        this.setState({excelData: formattedData});\r\n    }\r\n\r\n    render() {\r\n\r\n        const renderAMStudents = this.state.students.AM.map((item, i) => {\r\n            return (\r\n                <tr key={i}>\r\n                    <td>{i+1}</td>\r\n                    <td>{item.dc}</td>\r\n                    <td>{item.lastname}, {item.firstname}</td>\r\n                    <td>{item.housing}</td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n        const renderPMStudents = this.state.students.PM.map((item, i) => {\r\n            return (\r\n                <tr key={i}>\r\n                    <td>{i+1}</td>\r\n                    <td>{item.dc}</td>\r\n                    <td>{item.lastname}, {item.firstname}</td>\r\n                    <td>{item.housing}</td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <br />\r\n                <center>\r\n                    {\r\n                        this.state.excelData? \r\n                        <ExcelFile element={<button className='btn btn-info'>Download Tabe Checklist Spreadsheet</button>}>\r\n                            <ExcelSheet data={this.state.excelTabeData} name={this.props.match.params.classname + '-Tabe'}>\r\n                                <ExcelColumn label=\"\" value=\"num\"/>\r\n                                <ExcelColumn label=\"\" value=\"dc\"/>\r\n                                <ExcelColumn label=\"\" value=\"lastname\"/>\r\n                                <ExcelColumn label=\"\" value=\"firstname\"/>\r\n                                <ExcelColumn label=\"\" value=\"housing\"/>\r\n                                <ExcelColumn label=\"\" value=\"lr\"/>\r\n                                <ExcelColumn label=\"\" value=\"lm1\"/>\r\n                                <ExcelColumn label=\"\" value=\"lm2\"/>\r\n                                <ExcelColumn label=\"\" value=\"ll\"/>\r\n                                <ExcelColumn label=\"\" value=\"r1\"/>\r\n                                <ExcelColumn label=\"\" value=\"r2\"/>\r\n                                <ExcelColumn label=\"\" value=\"m1\"/>\r\n                                <ExcelColumn label=\"\" value=\"m2\"/>\r\n                                <ExcelColumn label=\"\" value=\"la\"/>\r\n                            </ExcelSheet>\r\n                        </ExcelFile>\r\n                        : ''\r\n                    }\r\n                    <br /><br />\r\n                    {\r\n                        this.state.excelData? \r\n                        <ExcelFile element={<button className='btn btn-info'>Download Class Spreadsheet</button>}>\r\n                            <ExcelSheet data={this.state.excelData} name={this.props.match.params.classname}>\r\n                                <ExcelColumn label=\"\" value=\"num\"/>\r\n                                <ExcelColumn label=\"\" value=\"dc\"/>\r\n                                <ExcelColumn label=\"\" value=\"lastname\"/>\r\n                                <ExcelColumn label=\"\" value=\"firstname\"/>\r\n                                <ExcelColumn label=\"\" value=\"housing\"/>\r\n                            </ExcelSheet>\r\n                        </ExcelFile>\r\n                        : ''\r\n                    }\r\n                    <br /><br />\r\n                    <h1>{this.props.match.params.classname} AM STUDENTS</h1>\r\n                    <table className='table-bordered'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>DC#</th>\r\n                                <th>Name</th>\r\n                                <th>Housing</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {renderAMStudents? renderAMStudents : <tr><td>Loading...</td></tr>}\r\n                        </tbody>\r\n                    </table>\r\n                    <br /><br />\r\n                    <h1>{this.props.match.params.classname} PM STUDENTS</h1>\r\n                    <table className='table-bordered'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>DC#</th>\r\n                                <th>Name</th>\r\n                                <th>Housing</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {renderPMStudents? renderPMStudents : <tr><td>Loading...</td></tr>}\r\n                        </tbody>\r\n                    </table>\r\n                </center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClassStudents;","import React, { Component } from 'react';\r\nimport ReactExport from \"react-data-export\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nclass GroupStudents extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            classStudents: [],\r\n            excelData: []\r\n        }\r\n\r\n        this.formatExcelData = this.formatExcelData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:4001/getgroupstudents/' + this.props.match.params.groupname, {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                }\r\n        }).then(res => {\r\n            return res.json();\r\n        }).then(results => {\r\n            results.sort(function(a, b) {\r\n                return (a.classname < b.classname)? -1 : 1;\r\n            });\r\n\r\n            this.setState({classStudents: results});\r\n            this.formatExcelData();\r\n        });\r\n    }\r\n\r\n    formatExcelData() {\r\n        const formattedData = [];\r\n\r\n        this.state.classStudents.forEach((item) => {\r\n            \r\n            formattedData.push({\r\n                num: item.classname + ' - ' + item.shift,\r\n                dc: '',\r\n                lastname: '',\r\n                firstname: ''\r\n            });\r\n\r\n            formattedData.push({\r\n                num: '#',\r\n                dc: 'DC',\r\n                lastname: 'Last Name',\r\n                firstname: 'First Name',\r\n                housing: 'Housing'\r\n            });\r\n\r\n            item.students.forEach((item, i) => {\r\n                item.num = i+1;\r\n                formattedData.push(item);\r\n            });\r\n\r\n            formattedData.push({\r\n                dc: '',\r\n                lastname: '',\r\n                firstname: ''\r\n            });\r\n        });\r\n\r\n        this.setState({excelData: formattedData});\r\n    }\r\n\r\n    render() {\r\n\r\n        const renderedClassLists = this.state.classStudents.map((obj, i) => {\r\n            return (\r\n                <div key={i}>\r\n                    <h1>{obj.classname} {obj.shift} STUDENTS</h1>\r\n                    <table className='table-bordered'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>DC#</th>\r\n                                <th>Name</th>\r\n                                <th>Housing</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                obj.students.map((item, i) => {\r\n                                    return (\r\n                                        <tr key={i}>\r\n                                            <td>{i+1}</td>\r\n                                            <td>{item.dc}</td>\r\n                                            <td>{item.lastname}, {item.firstname}</td>\r\n                                            <td>{item.housing}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    <br /><br />\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className='mt-3'>\r\n                <center>\r\n                    {\r\n                        this.state.excelData? \r\n                        <ExcelFile element={<button className='btn btn-info'>Download Spreadsheet</button>}>\r\n                            <ExcelSheet data={this.state.excelData} name={this.props.match.params.groupname}>\r\n                                <ExcelColumn label=\"\" value=\"num\"/>\r\n                                <ExcelColumn label=\"\" value=\"dc\"/>\r\n                                <ExcelColumn label=\"\" value=\"lastname\"/>\r\n                                <ExcelColumn label=\"\" value=\"firstname\"/>\r\n                                <ExcelColumn label=\"\" value=\"housing\"/>\r\n                            </ExcelSheet>\r\n                        </ExcelFile>\r\n                        : ''\r\n                    }\r\n                    <br /><br />\r\n                    {renderedClassLists}\r\n                </center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GroupStudents;","import React, { Component } from 'react';\r\nimport ReactExport from \"react-data-export\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n\r\nclass AllGroups extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            groupStudents: [],\r\n            excelData: []\r\n        }\r\n\r\n        this.formatExcelData = this.formatExcelData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:4001/getallgroups/', {\r\n            method: 'GET',\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => {\r\n            return res.json();\r\n        }).then(data => {\r\n            this.setState({groupStudents: data}, () => this.formatExcelData());\r\n        });\r\n    }\r\n\r\n    formatExcelData() {\r\n        const formattedData = [];\r\n        const dateObj = new Date();\r\n        const formattedDate = (dateObj.getMonth()+1) + '/' + dateObj.getDate() + '/' + dateObj.getFullYear();\r\n\r\n        // Loop through each group, create an excel worksheet (tab)\r\n        // displaying students for each group.\r\n        this.state.groupStudents.forEach((currGroup, i) => {\r\n\r\n            formattedData.push([]);\r\n\r\n            currGroup.classes.forEach((currClass, ii) => {\r\n\r\n                formattedData[i].push({\r\n                    columns: [\r\n                        {title: ' ', width: {wpx: 130}},\r\n                        {title: ' ', width: {wpx: 75}},\r\n                        {title: ' ', width: {wpx: 220}},\r\n                        {title: ' ', width: {wpx: 65}},\r\n                        {title: ' ', width: {wpx: 30}},\r\n                        {title: ' ', width: {wpx: 30}},\r\n                        {title: ' ', width: {wpx: 30}},\r\n                        {title: ' ', width: {wpx: 30}},\r\n                        {title: ' ', width: {wpx: 30}},\r\n                        {title: ' ', width: {wpx: 30}},\r\n                        {title: ' ', width: {wpx: 30}},\r\n                        {title: ' ', width: {wpx: 30}},\r\n                        {title: ' ', width: {wpx: 30}}\r\n                    ],\r\n                    data: [],\r\n                    groupName: currGroup.group\r\n                });\r\n\r\n                formattedData[i][ii].data.push([\r\n                    {value: ' '}\r\n                ]);\r\n\r\n                formattedData[i][ii].data.push([\r\n                    {\r\n                        value: currClass.teacher,\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    }\r\n                ]);\r\n\r\n                formattedData[i][ii].data.push([\r\n                    {\r\n                        value: currClass.className + ' -- AM',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: formattedDate,\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    }\r\n                ]);\r\n\r\n                formattedData[i][ii].data.push([\r\n                    {\r\n                        value: '#',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'DC#',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'Name',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'Housing',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'LR',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'LM1',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'LM2',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'LL',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'R1',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'R2',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'M1',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'M2',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'LA',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    }\r\n                ]);\r\n\r\n                // Now iterate over AM students.\r\n\r\n                currClass.studentsAM.forEach((stu, iii) => {\r\n                    formattedData[i][ii].data.push([\r\n                        {\r\n                            value: iii+1,\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: stu.dc,\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: stu.lastname + ', ' + stu.firstname,\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: stu.housing,\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: ' ',\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: ' ',\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: ' ',\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: ' ',\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: ' ',\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: ' ',\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: ' ',\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: ' ',\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: ' ',\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        }\r\n                    ])\r\n                });\r\n\r\n                formattedData[i][ii].data.push([\r\n                    {value: ' '}\r\n                ]);\r\n\r\n                formattedData[i][ii].data.push([\r\n                    {\r\n                        value: currClass.teacher,\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    }\r\n                ]);\r\n\r\n                formattedData[i][ii].data.push([\r\n                    {\r\n                        value: currClass.className + ' -- PM',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: formattedDate,\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    }\r\n                ]);\r\n\r\n                formattedData[i][ii].data.push([\r\n                    {\r\n                        value: '#',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'DC#',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'Name',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'Housing',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'LR',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'LM1',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'LM2',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'LL',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'R1',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'R2',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'M1',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'M2',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 'LA',\r\n                        style: {\r\n                            border: {\r\n                                top: { style: \"thin\" },\r\n                                bottom: { style: \"thin\" },\r\n                                right: { style: \"thin\" },\r\n                                left: { style: \"thin\" }\r\n                            },\r\n                            font: {bold: true}\r\n                        }\r\n                    }\r\n                ]);\r\n\r\n                // Iterate over PM students.\r\n\r\n                currClass.studentsPM.forEach((stu, iii) => {\r\n                    formattedData[i][ii].data.push([\r\n                        {\r\n                            value: iii+1,\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: stu.dc,\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: stu.lastname + ', ' + stu.firstname,\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: stu.housing,\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: ' ',\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: ' ',\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: ' ',\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: ' ',\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: ' ',\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: ' ',\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: ' ',\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: ' ',\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            value: ' ',\r\n                            style: {\r\n                                border: {\r\n                                    top: { style: \"thin\" },\r\n                                    bottom: { style: \"thin\" },\r\n                                    right: { style: \"thin\" },\r\n                                    left: { style: \"thin\" }\r\n                                }\r\n                            }\r\n                        }\r\n                    ])\r\n                });\r\n\r\n            });\r\n        });\r\n\r\n        this.setState({excelData: formattedData});\r\n    }\r\n\r\n    render() {\r\n        let renderExcel = [];\r\n\r\n        this.state.excelData.forEach((item, i) => {\r\n            if (item[0]) {\r\n                renderExcel.push(\r\n                    <ExcelSheet key={i} dataSet={item} name={item[0].groupName} />\r\n                )\r\n            }\r\n        });\r\n\r\n        return (\r\n            <div className='mt-3'>\r\n                <center>\r\n                    {\r\n                        <ExcelFile element={<button className='btn btn-info'>Download Spreadsheet</button>}>\r\n                            { \r\n                                renderExcel? renderExcel : ''\r\n                            }\r\n                        </ExcelFile>\r\n                    }\r\n                </center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllGroups;","import React, { Component } from 'react';\r\nimport RowResult from '../alpha-run/RowResult.jsx';\r\n\r\nclass Unassigned extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            unassigned: [],\r\n            classes: []\r\n        }\r\n\r\n        this.populateClasses = this.populateClasses.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:4001/getunassigned', {\r\n            method: 'GET',\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => {\r\n            return res.json();\r\n        }).then(results => {\r\n            results.sort((a, b) => {\r\n                return (a.lastname < b.lastname)? -1 : 1;\r\n            });\r\n            this.setState({unassigned: results});\r\n        });\r\n        this.populateClasses();\r\n    }\r\n\r\n    populateClasses() {\r\n        fetch('http://localhost:4001/getclasses', {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                }\r\n        }).then(res => {\r\n            return res.json();\r\n        }).then(results => {\r\n            this.setState({classes: results});\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const renderClasses = this.state.classes.map((item, i) => {\r\n            return (\r\n                <option key={i} value={item.classname}>{item.classname}</option>\r\n            )\r\n        });\r\n\r\n        const renderStu = this.state.unassigned.map((item, i) => {\r\n            if (!item.classam) {\r\n                item.classam = 'UUU';\r\n            }\r\n            if (!item.classpm) {\r\n                item.classpm = 'UUU';\r\n            }\r\n            return (\r\n                <RowResult rowNum={i+1} jobChange={false} classOptions={renderClasses} key={item.dc + i} row={item} rowKey={i} />\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className='mt-4'>\r\n            <center>\r\n                <h1>Unassigned Students</h1>\r\n                    <table className='table-bordered'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>DC#</th>\r\n                                <th>Name</th>\r\n                                <th>Housing</th>\r\n                                <th>AM Job</th>\r\n                                <th>PM Job</th>\r\n                                <th>AM Class</th>\r\n                                <th>PM Class</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {renderStu? renderStu : <tr><td>Loading...</td></tr>}\r\n                        </tbody>\r\n                    </table>\r\n            </center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Unassigned;","\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport CustomNav from './components/nav/NavBar.jsx';\r\nimport AlphaImport from './components/alpha-import/AlphaImport.jsx';\r\nimport AlphaRun from './components/alpha-run/AlphaRun.jsx';\r\nimport JobCodes from './components/job-codes/JobCodes.jsx';\r\nimport ClassLists from './components/class-lists/ClassLists.jsx';\r\nimport GroupList from './components/class-lists/GroupList.jsx';\r\nimport ClassStudents from './components/class-students/ClassStudents.jsx';\r\nimport GroupStudents from './components/class-students/GroupStudents.jsx';\r\nimport AllGroups from './components/class-students/AllGroups.jsx';\r\nimport Unassigned from './components/class-students/Unassigned.jsx';\r\nimport \"./styles/bootstrap.css\";\r\nimport \"./styles/app.css\";\r\n\r\nconst rootEl = document.getElementById('root');\r\n\r\nrender(\r\n    <div className=\"App container\">\r\n        <Router>\r\n            <CustomNav />\r\n\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <AlphaRun />\r\n                </Route>\r\n                <Route path=\"/alphaimport\">\r\n                    <AlphaImport />\r\n                </Route>\r\n                <Route path=\"/jobcodes\">\r\n                    <JobCodes />\r\n                </Route>\r\n                <Route component={ClassLists} path=\"/classlists\" />\r\n                <Route path=\"/grouplist\">\r\n                    <GroupList />\r\n                </Route>\r\n                <Route path=\"/unassigned\">\r\n                    <Unassigned />\r\n                </Route>\r\n                <Route path=\"/allgroups\">\r\n                    <AllGroups />\r\n                </Route>\r\n                <Route path=\"/classstudents/:classname/:teacher\" render={\r\n                    (props) => <ClassStudents {...props} />\r\n                } />\r\n                <Route path=\"/groupstudents/:groupname\" render={\r\n                    (props) => <GroupStudents {...props} />\r\n                } />\r\n            </Switch>\r\n        </Router>    \r\n    </div>\r\n    , rootEl);  \r\n"],"sourceRoot":""}